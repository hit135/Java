package ch10_extends.Extends;

public class Explanation {
	
	
	// 상속
	// 쓰는 이유 : 클래스들을 쓸 때 중복코드가 발생하는 경우
	//				한 곳에 묶어서 사용하기 위해서.. >>> 수정이 용이하다 (유지 보수)
	
	// 방식은 위의 클래스 name 옆에
	// extends name (부모 클래스의 이름임)
	
	// 부모라고 부르긴 하지만 extends는 확장이다
	// 그러니 자식이 부모의 확장임
	// 이걸 이해하면 다형성을 좀더 이해하기 편하다
	
	// 확장한 자식은 부모클래스에서 선언한 것들을 사용가능
	// 하지만 부모는 자식에서 선언한 것을 사용할 수 없음..
	
	// 다형성(Polymorphism)
	// 하나의 객체가 여러가지 클래스를 가질 수 있는 것!
	// 보통 한 리스트에 같이 담고 싶은데 타입이 달라서 못 담을때 사용한다.
	
	// 부모는 자식이 될 수 있고 자식은 부모가 될 수 없다. >> 자동 형변환
	// 하지만 자식이 된 부모는 다시 부모로 돌아갈 수 있다. >> 이때는 강제 형변환
	// 객체 instanceof 클래스Name >>> 객체가 클래스네임의 클래스로 변형시킬 수 있느냐?
	// 변형 가능하면 true를 출력, 변형 불가하면 false를 출력
	
	// 예시는 WarCraft를 빗대서 사용함
	// 가장 기본 부모로 워크 유닛이 있을것
	// 워크 유닛은 오크, 나이트엘프, 언데드로 나뉠것
	// 오크 안에는 피넛, 트롤
	// 나이트엘프 안에는 엘프, 위습
	// 언데드 안에는 스켈레톤, 리치
	

}
